# This configuration file is dynamically generated every time
# set_bb_env.sh is sourced to set up a workspace.  DO NOT EDIT.
#--------------------------------------------------------------
#
# This file is your local configuration file and is where all local user settings
# are placed. The comments in this file give some guide to the options a new user
# to the system might want to change but pretty much any configuration option can
# be set in this file. More adventurous users can look at local.conf.extended
# which contains other examples of configuration which can be placed in this file
# but new users likely don't need any of them initially.
#
# Lines starting with the '#' character are commented out and in some cases the
# default values are provided as comments to show people example syntax. Enabling
# the option is a question of removing the # character and making any change to the
# variable as required.

# CONF_VERSION is increased each time build/conf/ changes incompatibly
CONF_VERSION = "2"

# Which recipe or recipe append files we don't want to parse
BBMASK ?= ""

# Don't generate the mirror tarball for SCM repos, the snapshot is enough
BB_GENERATE_MIRROR_TARBALLS = "0"

# Change to 1 to enable verbose logging during git fetch
BB_GIT_VERBOSE_FETCH = "0"

# Additional separate configuration for compiling guest VM images
BBMULTICONFIG = "qcom-guestvm"

# Disable build time patch resolution. This would lauch a devshell
# and wait for manual intervention. We disable it.
PATCHRESOLVE = "noop"

#
# Parallelism Options
# These options control how much parallelism BitBake should use.
#

# Capture the count of cpu cores available from the host.
CPU_COUNT = "${@oe.utils.cpu_count(at_least=2)}"

# Number of parallel threads make can run based on cpu cores with a max cap at 20.
#THREAD_COUNT = "${@oe.utils.cpu_count(at_least=2, at_most=20)}"
THREAD_COUNT = "4"

# Determines how many tasks bitbake should run in parallel.
#BB_NUMBER_THREADS ?= "${CPU_COUNT}"
BB_NUMBER_THREADS ?= "4"

# Determines how many tasks bitbake should run in parallel during parsing.
BB_NUMBER_PARSE_THREADS ?= "${CPU_COUNT}"

# Specifies a maximum CPU pressure threshold for bitbake scheduler to start new tasks.
BB_PRESSURE_MAX_CPU = "900000"

# Specifies a maximum IO pressure threshold for bitbake scheduler to start new tasks.
BB_PRESSURE_MAX_IO = "900000"

# Specifies a maximum Memory pressure threshold for bitbake scheduler to start new tasks.
BB_PRESSURE_MAX_MEMORY = "900000"

# Determines how many processes make should run in parallel when running compile tasks.
PARALLEL_MAKE ?= "-j ${THREAD_COUNT} -l ${THREAD_COUNT}"

#Disable aktualizr
BBMASK += "/meta-updater/recipes-sota/aktualizr/aktualizr_git.bb"
BBMASK += "/meta-qcom-hwe/recipes-kernel/linux/linux-qcom-base_6.6.bb"
BBMASK += "/meta-qcom-hwe/recipes-kernel/linux/linux-qcom-custom_6.6.bb"

# Remove unbuildable pkggroups
RDEPENDS:packagegroup-qcom:remove = "packagegroup-qcom-ppat"

# We default to enabling the debugging tweaks.(Why not works?)
EXTRA_IMAGE_FEATURES += " debug-tweaks empty-root-password"

# For westron on QEMU

# Prefer mesa for native builds
PREFERRED_PROVIDER_virtual/libgbm-native = "mesa-native"
PREFERRED_PROVIDER_virtual/libgl-native = "mesa-native"
PREFERRED_PROVIDER_virtual/libegl-native = "mesa-native"

# For target system
CORE_IMAGE_EXTRA_INSTALL += "mesa mesa-driver-swrast mesa-driver-virtio libdrm weston weston-init"

# Graphics features - NEW SYNTAX
DISTRO_FEATURES:append = " wayland opengl"
MACHINE_FEATURES:append = " opengl"

# Enable virtio GPU driver specifically
PACKAGECONFIG:append:pn-mesa = " gallium"
GALLIUMDRIVERS = "swrast,virgl"


# Force Mesa EGL (not just DRI drivers)
PREFERRED_PROVIDER_virtual/egl = "mesa"
PREFERRED_PROVIDER_virtual/libgles1 = "mesa" 
PREFERRED_PROVIDER_virtual/libgles2 = "mesa"

# Enable EGL in Mesa build
PACKAGECONFIG:append:pn-mesa = " egl gles"

# Make sure we get Mesa libraries, not just Adreno
# CORE_IMAGE_EXTRA_INSTALL += "mesa mesa-driver-swrast" Already have