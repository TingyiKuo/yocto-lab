name: Yocto Build with Custom Layer

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Custom Layer
        uses: actions/checkout@v4
        with:        
          repository: TingyiKuo/myiq9qemu
          path: meta-myiq9qemu

      - name: Install repo
        run: |
          mkdir -p ~/.bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+x ~/.bin/repo
          export PATH=${PATH}:~/.bin
          echo "PATH=$PATH" >> $GITHUB_ENV

      - name: Restore repo cache
        uses: actions/cache@v3
        with:
          path: .repo
          key: repo-${{ github.sha }}
          restore-keys: |
            repo-

      - name: Repo init and sync
        run: |
          repo init -u https://github.com/qualcomm-linux/qcom-manifest -b qcom-linux-scarthgap -m qcom-6.6.65-QLI.1.4-Ver.1.1.xml
          repo sync -j$(nproc)

      - name: Set up Yocto environment
        run: |
          MACHINE=qcs9100-ride-sx DISTRO=qcom-wayland QCOM_SELECTED_BSP=base source setup-environment

      - name: Add Custom Layer
        run: |
          bitbake-layers add-layer meta-myiq9qemu

      - name: Restore download cache
        uses: actions/cache@v3
        with:
          path: download
          key: download-${{ github.sha }}
          restore-keys: |
            download-

      - name: Restore sstate-cache
        uses: actions/cache@v3
        with:
          path: sstate-cache
          key: sstate-cache-${{ github.sha }}
          restore-keys: |
            sstate-cache-

      - name: Build the image
        run: bitbake -f core-image-minimal
